// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oblig1.DAL;

#nullable disable

namespace Oblig1.Migrations
{
    [DbContext(typeof(ItemDbContext))]
    [Migration("20230913210749_nyeMigrasjoner")]
    partial class nyeMigrasjoner
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("Oblig1.Models.Eeier", b =>
                {
                    b.Property<long>("kontoNummer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("brukerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("kontoNummer");

                    b.HasIndex("brukerId");

                    b.ToTable("Eeier");
                });

            modelBuilder.Entity("Oblig1.Models.Hus", b =>
                {
                    b.Property<int>("husId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<long>("EeierkontoNummer")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Pris")
                        .HasColumnType("TEXT");

                    b.Property<double>("areal")
                        .HasColumnType("REAL");

                    b.Property<bool>("erTilgjengelig")
                        .HasColumnType("INTEGER");

                    b.Property<int>("romAntall")
                        .HasColumnType("INTEGER");

                    b.HasKey("husId");

                    b.HasIndex("EeierkontoNummer");

                    b.ToTable("hus");
                });

            modelBuilder.Entity("Oblig1.Models.Ordre", b =>
                {
                    b.Property<int>("ordreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Dato")
                        .HasColumnType("TEXT");

                    b.Property<int?>("KundeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("betaltGjennom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("husId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ordreId");

                    b.HasIndex("KundeId");

                    b.HasIndex("husId");

                    b.ToTable("ordre");
                });

            modelBuilder.Entity("Oblig1.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fodselsdato")
                        .HasColumnType("TEXT");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TelefonNmr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Oblig1.Models.Bruker", b =>
                {
                    b.HasBaseType("Oblig1.Models.Person");

                    b.HasDiscriminator().HasValue("Bruker");
                });

            modelBuilder.Entity("Oblig1.Models.Kunde", b =>
                {
                    b.HasBaseType("Oblig1.Models.Person");

                    b.Property<int>("kundeId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Kunde");
                });

            modelBuilder.Entity("Oblig1.Models.Eeier", b =>
                {
                    b.HasOne("Oblig1.Models.Bruker", "bruker")
                        .WithMany()
                        .HasForeignKey("brukerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bruker");
                });

            modelBuilder.Entity("Oblig1.Models.Hus", b =>
                {
                    b.HasOne("Oblig1.Models.Eeier", "Eeier")
                        .WithMany()
                        .HasForeignKey("EeierkontoNummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eeier");
                });

            modelBuilder.Entity("Oblig1.Models.Ordre", b =>
                {
                    b.HasOne("Oblig1.Models.Kunde", null)
                        .WithMany("ordreListe")
                        .HasForeignKey("KundeId");

                    b.HasOne("Oblig1.Models.Hus", "hus")
                        .WithMany()
                        .HasForeignKey("husId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hus");
                });

            modelBuilder.Entity("Oblig1.Models.Kunde", b =>
                {
                    b.Navigation("ordreListe");
                });
#pragma warning restore 612, 618
        }
    }
}
